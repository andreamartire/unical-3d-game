= jME libraries How To =

Innanzi tutto bisogna scaricare il pacchetto jme2_svn.tar.gz --> [http://unical-3d-game.googlecode.com/files/jme2_svn.tar.gz qui]

scompattando il pacchetto troverete jME2 e jME2Physics

copiate queste due cartelle nella vostra workspace di eclipse
*ATTENZIONE*: copiate le due cartelle jME2 e jME2Physics e non la cartella superiore che le contiene!!

fate partire eclipse 

*ATTENZIONE*: se siete sotto ubuntu 9.10, eclipse può avere problemi col muose.
per risolverli dovete creare questo script bash:
{{{
#!/bin/sh

export GDK_NATIVE_WINDOWS=1

/percorso/di/eclipse/eclipse
}}}

dove /percorso/di/eclipse/eclipse è il percorso fino al file binario di eclipse (appunto eclipse)
ad esempio nel mio caso ho la cartella di eclipse nella home, quindi il percorso sarà: /home/sal/eclipse/eclipse

una volta creato lo script, renderlo eseguibile con: chmod +x nomeScript.sh

e avviare eclipse tramite lo script: ./nomeScript.sh

oppure aggiungetelo ai path di sistema...

in eclipse create un nuovo progetto java: new -> Java Project
come nome del progetto inserire: jME
e poi cliccare su finish

verrà creato il progetto svn jME2 (visibile nel Package Explorer)


Ora bisogna aggiungere swt:

nel package explorer click destro su jME2 e scegliete "Properties"

nella finestra che apparirà scegliere "Java Build Path" e poi la linguetta "Libraries"

clickate su "Add JARs"

doppio click su jME2, poi lib, poi swt, poi linux e selezionare swt.jar


Ora bisogna impostare le native per lwjgl:

sempre nella finestra libraries espandere lwjgl.jar doppio click su "Native library location" e inserite: jME2/lib/lwjgl/native/linux


A questo punto jME2 è ok, ora create un nuovo progetto come prima, chiamandolo jME2Physics

verrà creato il progetto svn jME2Physics (visibile nel Package Explorer)

Bisogna settare i required projects e le native di ode quindi:

nel package explorer click destro su jME2Physics e scegliete "Properties"

nella finestra che apparirà scegliete "Java Build Path" e poi la linguetta "Projects"

rimuovere il progetto inesistente jme e aggiungere jME2

ora andate in "Libraries" ed espandete odejava-ini.jar e mettete le native: jME2Physics/impl/ode/lib


Bene, ora jME e jME2Physics sono ok

per usarle in un vostro progetto basta creare il progetto normalmente e poi settare i required projects come abbiamo fatto per jME2Physics

HAVE FUN!!!
