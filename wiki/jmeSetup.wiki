= jME libraries How To =

== Operazioni preliminari ==

Innanzi tutto bisogna scaricare eclipse --> [http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/galileo/SR1/eclipse-java-galileo-SR1-linux-gtk.tar.gz qui]

Ora bisogna installare Subclipse: <br>
In eclipse andate su "help" -> "install new software". 
Cliccate su Add e mettete come nome Subclipse e come location: http://subclipse.tigris.org/update_1.6.x <br>
si caricherà il repository, quindi spuntate la casella Subclipse e installate.

Ora scaricate il pacchetto jme2_svn.tar.gz --> [http://unical-3d-game.googlecode.com/files/jme2_svn.tar.gz qui]

== Setting up eclipse ==

*ATTENZIONE*: se siete sotto ubuntu 9.10, eclipse può avere problemi col muose.
per risolverli dovete creare questo script bash:
{{{
#!/bin/sh

export GDK_NATIVE_WINDOWS=1

/percorso/di/eclipse/eclipse
}}}

Dove /percorso/di/eclipse/eclipse è il percorso fino al file binario di eclipse (appunto eclipse) <br>
Ad esempio io ho la cartella di eclipse nella home, quindi il percorso sarà: /home/sal/eclipse/eclipse.
<br><br>
Una volta creato lo script, renderlo eseguibile con: `chmod +x nomeScript.sh`

Quindi da ora in poi bisogna avviare eclipse tramite lo script: `./nomeScript.sh`

Oppure potete aggiungerlo ai path di sistema...<br><br>

== Setting up jME and jME Physics ==

Scompattando il pacchetto jme2_svn.tar.gz troverete jME2 e jME2Physics

Copiate queste due cartelle nella vostra workspace di eclipse. <br>
*ATTENZIONE*: copiate le due cartelle jME2 e jME2Physics e non la cartella superiore che le contiene!!

=== Setting up jME2 ===

Una volta avviato eclipse create un nuovo progetto java: <i>new -> Java Project</i><br>
come nome del progetto inserite: <i>jME2</i> <br>
e poi cliccare su finish.

Verrà creato il progetto svn jME2 (visibile nel Package Explorer) <br><br>

Ora bisogna aggiungere swt:

  nel Package Explorer click destro su jME2 e scegliete <i>"Properties"</i>

  nella finestra che apparirà scegliere <i>"Java Build Path"</i> e poi la linguetta <i>"Libraries"</i>

  clickate su <i>"Add JARs"</i>

  doppio click su jME2, poi <i>lib</i>, poi <i>swt</i>, poi <i>linux</i> e selezionare <i>swt.jar</i>

<br>
Ora bisogna impostare le native per lwjgl:

sempre nella finestra <i>libraries</i> espandete lwjgl.jar, doppio click su <i>"Native library location"</i> e inserite: <i>jME2/lib/lwjgl/native/linux</i>
<br>

=== Setting up jME2Physics ===

A questo punto jME2 è ok, ora create un nuovo progetto come prima, chiamandolo jME2Physics

Verrà creato il progetto svn jME2Physics (visibile nel Package Explorer)

Bisogna settare i required projects e le native di ode quindi:

  nel package explorer click destro su jME2Physics e scegliete <i>"Properties"</i>

  nella finestra che apparirà scegliete <i>"Java Build Path"</i> e poi la linguetta <i>"Projects"</i>

  rimuovere il progetto inesistente jme e aggiungere jME2

Ora andate in <i>"Libraries"</i> ed espandete odejava-ini.jar e mettete le native: <i>jME2Physics/impl/ode/lib</i>

<br><br>

=== Usare jME e jME Physics ===

Bene, ora jME e jME2Physics sono ok
<br><br>
per usarle in un vostro progetto basta creare il progetto normalmente e poi settare i required projects come abbiamo fatto per jME2Physics
<br> Per una guida leggere qui: http://code.google.com/p/unical-3d-game/wiki/googleCodeHowTo
<br><br><br><br>
HAVE FUN!!!